apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    control-plane: capics-controller-manager
  name: capics-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    cluster.x-k8s.io/v1beta1: v1beta1
  name: icsclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capics-webhook-service
          namespace: capics-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ICSCluster
    listKind: ICSClusterList
    plural: icsclusters
    singular: icscluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster infrastructure is ready for ICSMachine
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Server is the address of the iCenter endpoint.
      jsonPath: .spec.cloudName
      name: CloudName
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint[0]
      name: ControlPlaneEndpoint
      priority: 1
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: ICSCluster is the Schema for the icsclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSClusterSpec defines the desired state of ICSCluster
            properties:
              cloudName:
                description: The name of the cloud to use from the clouds secret
                type: string
              clusterModules:
                description: ClusterModules hosts information regarding the anti-affinity
                  ICS constructs for each of the objects responsible for creation
                  of VM objects belonging to the cluster.
                items:
                  description: ClusterModule holds the anti affinity construct `ClusterModule`
                    identifier in use by the VMs owned by the object referred by the
                    TargetObjectName field.
                  properties:
                    controlPlane:
                      description: ControlPlane indicates whether the referred object
                        is responsible for control plane nodes. Currently, only the
                        KubeadmControlPlane objects have this flag set to true. Only
                        a single object in the slice can have this value set to true.
                      type: boolean
                    moduleUUID:
                      description: ModuleUUID is the unique identifier of the `ClusterModule`
                        used by the object.
                      type: string
                    targetObjectName:
                      description: TargetObjectName points to the object that uses
                        the Cluster Module information to enforce anti-affinity amongst
                        its descendant VM objects.
                      type: string
                  required:
                  - controlPlane
                  - moduleUUID
                  - targetObjectName
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              enabledLoadBalancer:
                description: Enabled defines whether a LoadBalancer should be created.
                type: boolean
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              insecure:
                description: Insecure is a flag that controls whether or not to validate
                  the ics server's certificate.
                type: boolean
            type: object
          status:
            description: ICSClusterStatus defines the observed state of ICSCluster
            properties:
              conditions:
                description: Conditions defines current service state of the ICSCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              iCenterVersion:
                description: ICenterVersion defines the version of the iCenter server
                  defined in the spec.
                type: string
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster infrastructure is ready for ICSMachine
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Server is the address of the iCenter endpoint.
      jsonPath: .spec.cloudName
      name: CloudName
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint[0]
      name: ControlPlaneEndpoint
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ICSCluster is the Schema for the icsclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSClusterSpec defines the desired state of ICSCluster
            properties:
              cloudName:
                description: The name of the cloud to use from the clouds secret
                type: string
              clusterModules:
                description: ClusterModules hosts information regarding the anti-affinity
                  ICS constructs for each of the objects responsible for creation
                  of VM objects belonging to the cluster.
                items:
                  description: ClusterModule holds the anti affinity construct `ClusterModule`
                    identifier in use by the VMs owned by the object referred by the
                    TargetObjectName field.
                  properties:
                    controlPlane:
                      description: ControlPlane indicates whether the referred object
                        is responsible for control plane nodes. Currently, only the
                        KubeadmControlPlane objects have this flag set to true. Only
                        a single object in the slice can have this value set to true.
                      type: boolean
                    moduleUUID:
                      description: ModuleUUID is the unique identifier of the `ClusterModule`
                        used by the object.
                      type: string
                    targetObjectName:
                      description: TargetObjectName points to the object that uses
                        the Cluster Module information to enforce anti-affinity amongst
                        its descendant VM objects.
                      type: string
                  required:
                  - controlPlane
                  - moduleUUID
                  - targetObjectName
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              enabledLoadBalancer:
                description: Enabled defines whether a LoadBalancer should be created.
                type: boolean
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              insecure:
                description: Insecure is a flag that controls whether or not to validate
                  the ics server's certificate.
                type: boolean
            type: object
          status:
            description: ICSClusterStatus defines the observed state of ICSCluster
            properties:
              conditions:
                description: Conditions defines current service state of the ICSCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              iCenterVersion:
                description: ICenterVersion defines the version of the iCenter server
                  defined in the spec.
                type: string
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    cluster.x-k8s.io/v1beta1: v1beta1
  name: icsmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capics-webhook-service
          namespace: capics-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ICSMachine
    listKind: ICSMachineList
    plural: icsmachines
    singular: icsmachine
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: ICSMachine is the Schema for the icsmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSMachineSpec defines the desired state of ICSMachine
            properties:
              cloneMode:
                description: CloneMode specifies the type of clone operation. The
                  LinkedClone mode is only support for templates that have at least
                  one snapshot. If the template has no snapshots, then CloneMode defaults
                  to FullClone. When LinkedClone mode is enabled the DiskGiB field
                  is ignored as it is not possible to expand disks of linked clones.
                  Defaults to LinkedClone, but fails gracefully to FullClone if the
                  source of the clone operation has no snapshots.
                type: string
              cloudName:
                description: Server is the IP address or FQDN of the ics server on
                  which the virtual machine is created/located.
                type: string
              cluster:
                description: Cluster is the name or inventory path of the cluster
                  in which the virtual machine is created/located.
                type: string
              datastore:
                description: Datastore is the name or inventory path of the datastore
                  in which the virtual machine is created/located.
                type: string
              disks:
                description: Disks is the vm disks configuration for this machine's
                  VM.
                items:
                  properties:
                    busModel:
                      description: 'BusModel default value: VIRTIO'
                      type: string
                    diskSize:
                      description: DiskSize is the size of a virtual machine's disk,
                        in GiB. Defaults to the eponymous property value in the template
                        from which the virtual machine is cloned.
                      format: int32
                      type: integer
                    volumeFormat:
                      description: Default RAW, RAW\QCOW2
                      type: string
                    volumePolicy:
                      description: Default THIN, THIN\THICK
                      type: string
                  type: object
                type: array
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              memoryMiB:
                description: MemoryMiB is the size of a virtual machine's memory,
                  in MiB. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int64
                type: integer
              network:
                description: Network is the network configuration for this machine's
                  VM.
                properties:
                  devices:
                    description: Devices is the list of network devices used by the
                      virtual machine. Make sure at least one network matches the
                      ClusterSpec.CloudProviderConfiguration.Network.Name
                    items:
                      description: NetworkDeviceSpec defines the network configuration
                        for a virtual machine's network device.
                      properties:
                        deviceID:
                          description: DeviceID may be used to explicitly assign a
                            name to the network device as it exists in the guest operating
                            system.
                          type: string
                        deviceName:
                          description: DeviceName may be used to explicitly assign
                            a name to the network device as it exists in the guest
                            operating system.
                          type: string
                        dhcp4:
                          description: DHCP4 is a flag that indicates whether or not
                            to use DHCP for IPv4 on this device. If true then IPAddrs
                            should not contain any IPv4 addresses.
                          type: boolean
                        dhcp6:
                          description: DHCP6 is a flag that indicates whether or not
                            to use DHCP for IPv6 on this device. If true then IPAddrs
                            should not contain any IPv6 addresses.
                          type: boolean
                        gateway4:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP4 is false.
                          type: string
                        gateway6:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP6 is false.
                          type: string
                        ipAddrs:
                          description: IPAddrs is a list of one or more IPv4 and/or
                            IPv6 addresses to assign to this device. Required when
                            DHCP4 and DHCP6 are both false.
                          items:
                            type: string
                          type: array
                        macAddr:
                          description: MACAddr is the MAC address used by this device.
                            It is generally a good idea to omit this field and allow
                            a MAC address to be generated. Please note that this value
                            must use the OUI to work with the in-tree ics cloud provider.
                          type: string
                        mtu:
                          description: MTU is the device’s Maximum Transmission Unit
                            size in bytes.
                          format: int64
                          type: integer
                        nameservers:
                          description: Nameservers is a list of IPv4 and/or IPv6 addresses
                            used as DNS nameservers. Please note that Linux allows
                            only three nameservers (https://linux.die.net/man/5/resolv.conf).
                          items:
                            type: string
                          type: array
                        netMask:
                          description: NetMask the network device network.
                          type: string
                        networkID:
                          description: NetworkID is the ID of the ics network to which
                            the device will be connected.
                          type: string
                        networkName:
                          description: NetworkName is the name of the ics network
                            to which the device will be connected.
                          type: string
                        networkType:
                          description: NetworkType the type of the ics network to
                            which the device will be connected.
                          type: string
                        routes:
                          description: Routes is a list of optional, static routes
                            applied to the device.
                          items:
                            description: NetworkRouteSpec defines a static network
                              route.
                            properties:
                              metric:
                                description: Metric is the weight/priority of the
                                  route.
                                format: int32
                                type: integer
                              to:
                                description: To is an IPv4 or IPv6 address.
                                type: string
                              via:
                                description: Via is an IPv4 or IPv6 address.
                                type: string
                            required:
                            - metric
                            - to
                            - via
                            type: object
                          type: array
                        searchDomains:
                          description: SearchDomains is a list of search domains used
                            when resolving IP addresses with DNS.
                          items:
                            type: string
                          type: array
                        switchType:
                          description: SwitchType the type of the ics switch network
                            to which the device will be connected.
                          type: string
                      required:
                      - networkID
                      - networkName
                      - switchType
                      type: object
                    type: array
                  preferredAPIServerCidr:
                    description: PreferredAPIServeCIDR is the preferred CIDR for the
                      Kubernetes API server endpoint on this machine
                    type: string
                  routes:
                    description: Routes is a list of optional, static routes applied
                      to the virtual machine.
                    items:
                      description: NetworkRouteSpec defines a static network route.
                      properties:
                        metric:
                          description: Metric is the weight/priority of the route.
                          format: int32
                          type: integer
                        to:
                          description: To is an IPv4 or IPv6 address.
                          type: string
                        via:
                          description: Via is an IPv4 or IPv6 address.
                          type: string
                      required:
                      - metric
                      - to
                      - via
                      type: object
                    type: array
                required:
                - devices
                type: object
              numCPUs:
                description: NumCPUs is the number of virtual processors in a virtual
                  machine. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int32
                type: integer
              numCoresPerSocket:
                description: NumCPUs is the number of cores among which to distribute
                  CPUs in this virtual machine. Defaults to the eponymous property
                  value in the template from which the virtual machine is cloned.
                format: int32
                type: integer
              providerID:
                description: ProviderID is the virtual machine's BIOS UUID formated
                  as ics://12345678-1234-1234-1234-123456789abc
                type: string
              snapshot:
                description: Snapshot is the name of the snapshot from which to create
                  a linked clone. This field is ignored if LinkedClone is not enabled.
                  Defaults to the source's current snapshot.
                type: string
              template:
                description: Template is the name or inventory path of the template
                  used to clone the virtual machine.
                type: string
              user:
                description: SSHUser specifies the name of a user that is granted
                  remote access to the deployed VM.
                properties:
                  authorizedKey:
                    description: AuthorizedKey is one SSH keys that grant remote access.
                    type: string
                  authorizedType:
                    description: AuthorizedType is the authorized type that grant
                      remote access.
                    type: string
                  name:
                    description: Name is the name of the vm system user.
                    type: string
                required:
                - authorizedKey
                - authorizedType
                - name
                type: object
            required:
            - network
            - template
            type: object
          status:
            description: ICSMachineStatus defines the observed state of ICSMachine
            properties:
              addresses:
                description: Addresses contains the ICS instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the ICSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              network:
                description: Network returns the network status for each of the machine's
                  configured network interfaces.
                items:
                  description: NetworkStatus provides information about one of a VM's
                    networks.
                  properties:
                    connected:
                      description: Connected is a flag that indicates whether this
                        network is currently connected to the VM.
                      type: boolean
                    ipAddrs:
                      description: IPAddrs is one or more IP addresses reported by
                        vm-tools.
                      items:
                        type: string
                      type: array
                    macAddr:
                      description: MACAddr is the MAC address of the network device.
                      type: string
                    networkName:
                      description: NetworkName is the name of the network.
                      type: string
                  required:
                  - macAddr
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ICSMachine is the Schema for the icsmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSMachineSpec defines the desired state of ICSMachine
            properties:
              cloneMode:
                description: CloneMode specifies the type of clone operation. The
                  LinkedClone mode is only support for templates that have at least
                  one snapshot. If the template has no snapshots, then CloneMode defaults
                  to FullClone. When LinkedClone mode is enabled the DiskGiB field
                  is ignored as it is not possible to expand disks of linked clones.
                  Defaults to LinkedClone, but fails gracefully to FullClone if the
                  source of the clone operation has no snapshots.
                type: string
              cloudName:
                description: Server is the IP address or FQDN of the ics server on
                  which the virtual machine is created/located.
                type: string
              cluster:
                description: Cluster is the name or inventory path of the cluster
                  in which the virtual machine is created/located.
                type: string
              datastore:
                description: Datastore is the name or inventory path of the datastore
                  in which the virtual machine is created/located.
                type: string
              disks:
                description: Disks is the vm disks configuration for this machine's
                  VM.
                items:
                  properties:
                    busModel:
                      description: 'BusModel default value: VIRTIO'
                      type: string
                    diskSize:
                      description: DiskSize is the size of a virtual machine's disk,
                        in GiB. Defaults to the eponymous property value in the template
                        from which the virtual machine is cloned.
                      format: int32
                      type: integer
                    volumeFormat:
                      description: Default RAW, RAW\QCOW2
                      type: string
                    volumePolicy:
                      description: Default THIN, THIN\THICK
                      type: string
                  type: object
                type: array
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              memoryMiB:
                description: MemoryMiB is the size of a virtual machine's memory,
                  in MiB. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int64
                type: integer
              network:
                description: Network is the network configuration for this machine's
                  VM.
                properties:
                  devices:
                    description: Devices is the list of network devices used by the
                      virtual machine. Make sure at least one network matches the
                      ClusterSpec.CloudProviderConfiguration.Network.Name
                    items:
                      description: NetworkDeviceSpec defines the network configuration
                        for a virtual machine's network device.
                      properties:
                        deviceID:
                          description: DeviceID may be used to explicitly assign a
                            name to the network device as it exists in the guest operating
                            system.
                          type: string
                        deviceName:
                          description: DeviceName may be used to explicitly assign
                            a name to the network device as it exists in the guest
                            operating system.
                          type: string
                        dhcp4:
                          description: DHCP4 is a flag that indicates whether or not
                            to use DHCP for IPv4 on this device. If true then IPAddrs
                            should not contain any IPv4 addresses.
                          type: boolean
                        dhcp6:
                          description: DHCP6 is a flag that indicates whether or not
                            to use DHCP for IPv6 on this device. If true then IPAddrs
                            should not contain any IPv6 addresses.
                          type: boolean
                        gateway4:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP4 is false.
                          type: string
                        gateway6:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP6 is false.
                          type: string
                        ipAddrs:
                          description: IPAddrs is a list of one or more IPv4 and/or
                            IPv6 addresses to assign to this device. Required when
                            DHCP4 and DHCP6 are both false.
                          items:
                            type: string
                          type: array
                        macAddr:
                          description: MACAddr is the MAC address used by this device.
                            It is generally a good idea to omit this field and allow
                            a MAC address to be generated. Please note that this value
                            must use the OUI to work with the in-tree ics cloud provider.
                          type: string
                        mtu:
                          description: MTU is the device’s Maximum Transmission Unit
                            size in bytes.
                          format: int64
                          type: integer
                        nameservers:
                          description: Nameservers is a list of IPv4 and/or IPv6 addresses
                            used as DNS nameservers. Please note that Linux allows
                            only three nameservers (https://linux.die.net/man/5/resolv.conf).
                          items:
                            type: string
                          type: array
                        netMask:
                          description: NetMask the network device network.
                          type: string
                        networkID:
                          description: NetworkID is the ID of the ics network to which
                            the device will be connected.
                          type: string
                        networkName:
                          description: NetworkName is the name of the ics network
                            to which the device will be connected.
                          type: string
                        networkType:
                          description: NetworkType the type of the ics network to
                            which the device will be connected.
                          type: string
                        routes:
                          description: Routes is a list of optional, static routes
                            applied to the device.
                          items:
                            description: NetworkRouteSpec defines a static network
                              route.
                            properties:
                              metric:
                                description: Metric is the weight/priority of the
                                  route.
                                format: int32
                                type: integer
                              to:
                                description: To is an IPv4 or IPv6 address.
                                type: string
                              via:
                                description: Via is an IPv4 or IPv6 address.
                                type: string
                            required:
                            - metric
                            - to
                            - via
                            type: object
                          type: array
                        searchDomains:
                          description: SearchDomains is a list of search domains used
                            when resolving IP addresses with DNS.
                          items:
                            type: string
                          type: array
                        switchType:
                          description: SwitchType the type of the ics switch network
                            to which the device will be connected.
                          type: string
                      required:
                      - networkID
                      - networkName
                      - switchType
                      type: object
                    type: array
                  preferredAPIServerCidr:
                    description: PreferredAPIServeCIDR is the preferred CIDR for the
                      Kubernetes API server endpoint on this machine
                    type: string
                  routes:
                    description: Routes is a list of optional, static routes applied
                      to the virtual machine.
                    items:
                      description: NetworkRouteSpec defines a static network route.
                      properties:
                        metric:
                          description: Metric is the weight/priority of the route.
                          format: int32
                          type: integer
                        to:
                          description: To is an IPv4 or IPv6 address.
                          type: string
                        via:
                          description: Via is an IPv4 or IPv6 address.
                          type: string
                      required:
                      - metric
                      - to
                      - via
                      type: object
                    type: array
                required:
                - devices
                type: object
              numCPUs:
                description: NumCPUs is the number of virtual processors in a virtual
                  machine. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int32
                type: integer
              numCoresPerSocket:
                description: NumCPUs is the number of cores among which to distribute
                  CPUs in this virtual machine. Defaults to the eponymous property
                  value in the template from which the virtual machine is cloned.
                format: int32
                type: integer
              providerID:
                description: ProviderID is the virtual machine's BIOS UUID formated
                  as ics://12345678-1234-1234-1234-123456789abc
                type: string
              snapshot:
                description: Snapshot is the name of the snapshot from which to create
                  a linked clone. This field is ignored if LinkedClone is not enabled.
                  Defaults to the source's current snapshot.
                type: string
              template:
                description: Template is the name or inventory path of the template
                  used to clone the virtual machine.
                type: string
              user:
                description: SSHUser specifies the name of a user that is granted
                  remote access to the deployed VM.
                properties:
                  authorizedKey:
                    description: AuthorizedKey is one SSH keys that grant remote access.
                    type: string
                  authorizedType:
                    description: AuthorizedType is the authorized type that grant
                      remote access.
                    type: string
                  name:
                    description: Name is the name of the vm system user.
                    type: string
                required:
                - authorizedKey
                - authorizedType
                - name
                type: object
            required:
            - network
            - template
            type: object
          status:
            description: ICSMachineStatus defines the observed state of ICSMachine
            properties:
              addresses:
                description: Addresses contains the ICS instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the ICSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              network:
                description: Network returns the network status for each of the machine's
                  configured network interfaces.
                items:
                  description: NetworkStatus provides information about one of a VM's
                    networks.
                  properties:
                    connected:
                      description: Connected is a flag that indicates whether this
                        network is currently connected to the VM.
                      type: boolean
                    ipAddrs:
                      description: IPAddrs is one or more IP addresses reported by
                        vm-tools.
                      items:
                        type: string
                      type: array
                    macAddr:
                      description: MACAddr is the MAC address of the network device.
                      type: string
                    networkName:
                      description: NetworkName is the name of the network.
                      type: string
                  required:
                  - macAddr
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    cluster.x-k8s.io/v1beta1: v1beta1
  name: icsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capics-webhook-service
          namespace: capics-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ICSMachineTemplate
    listKind: ICSMachineTemplateList
    plural: icsmachinetemplates
    singular: icsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: ICSMachineTemplate is the Schema for the icsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSMachineTemplateSpec defines the desired state of ICSMachineTemplate
            properties:
              template:
                description: ICSMachineTemplateResource describes the data needed
                  to create a ICSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      cloneMode:
                        description: CloneMode specifies the type of clone operation.
                          The LinkedClone mode is only support for templates that
                          have at least one snapshot. If the template has no snapshots,
                          then CloneMode defaults to FullClone. When LinkedClone mode
                          is enabled the DiskGiB field is ignored as it is not possible
                          to expand disks of linked clones. Defaults to LinkedClone,
                          but fails gracefully to FullClone if the source of the clone
                          operation has no snapshots.
                        type: string
                      cloudName:
                        description: Server is the IP address or FQDN of the ics server
                          on which the virtual machine is created/located.
                        type: string
                      cluster:
                        description: Cluster is the name or inventory path of the
                          cluster in which the virtual machine is created/located.
                        type: string
                      datastore:
                        description: Datastore is the name or inventory path of the
                          datastore in which the virtual machine is created/located.
                        type: string
                      disks:
                        description: Disks is the vm disks configuration for this
                          machine's VM.
                        items:
                          properties:
                            busModel:
                              description: 'BusModel default value: VIRTIO'
                              type: string
                            diskSize:
                              description: DiskSize is the size of a virtual machine's
                                disk, in GiB. Defaults to the eponymous property value
                                in the template from which the virtual machine is
                                cloned.
                              format: int32
                              type: integer
                            volumeFormat:
                              description: Default RAW, RAW\QCOW2
                              type: string
                            volumePolicy:
                              description: Default THIN, THIN\THICK
                              type: string
                          type: object
                        type: array
                      identityRef:
                        description: IdentityRef is a reference to either a Secret
                          that contains the identity to use when reconciling the cluster.
                        properties:
                          identityKey:
                            type: string
                          kind:
                            description: Kind of the identity. Can either be Secret
                            enum:
                            - Secret
                            type: string
                          name:
                            description: Name of the identity.
                            minLength: 1
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      memoryMiB:
                        description: MemoryMiB is the size of a virtual machine's
                          memory, in MiB. Defaults to the eponymous property value
                          in the template from which the virtual machine is cloned.
                        format: int64
                        type: integer
                      network:
                        description: Network is the network configuration for this
                          machine's VM.
                        properties:
                          devices:
                            description: Devices is the list of network devices used
                              by the virtual machine. Make sure at least one network
                              matches the ClusterSpec.CloudProviderConfiguration.Network.Name
                            items:
                              description: NetworkDeviceSpec defines the network configuration
                                for a virtual machine's network device.
                              properties:
                                deviceID:
                                  description: DeviceID may be used to explicitly
                                    assign a name to the network device as it exists
                                    in the guest operating system.
                                  type: string
                                deviceName:
                                  description: DeviceName may be used to explicitly
                                    assign a name to the network device as it exists
                                    in the guest operating system.
                                  type: string
                                dhcp4:
                                  description: DHCP4 is a flag that indicates whether
                                    or not to use DHCP for IPv4 on this device. If
                                    true then IPAddrs should not contain any IPv4
                                    addresses.
                                  type: boolean
                                dhcp6:
                                  description: DHCP6 is a flag that indicates whether
                                    or not to use DHCP for IPv6 on this device. If
                                    true then IPAddrs should not contain any IPv6
                                    addresses.
                                  type: boolean
                                gateway4:
                                  description: Gateway4 is the IPv4 gateway used by
                                    this device. Required when DHCP4 is false.
                                  type: string
                                gateway6:
                                  description: Gateway4 is the IPv4 gateway used by
                                    this device. Required when DHCP6 is false.
                                  type: string
                                ipAddrs:
                                  description: IPAddrs is a list of one or more IPv4
                                    and/or IPv6 addresses to assign to this device.
                                    Required when DHCP4 and DHCP6 are both false.
                                  items:
                                    type: string
                                  type: array
                                macAddr:
                                  description: MACAddr is the MAC address used by
                                    this device. It is generally a good idea to omit
                                    this field and allow a MAC address to be generated.
                                    Please note that this value must use the OUI to
                                    work with the in-tree ics cloud provider.
                                  type: string
                                mtu:
                                  description: MTU is the device’s Maximum Transmission
                                    Unit size in bytes.
                                  format: int64
                                  type: integer
                                nameservers:
                                  description: Nameservers is a list of IPv4 and/or
                                    IPv6 addresses used as DNS nameservers. Please
                                    note that Linux allows only three nameservers
                                    (https://linux.die.net/man/5/resolv.conf).
                                  items:
                                    type: string
                                  type: array
                                netMask:
                                  description: NetMask the network device network.
                                  type: string
                                networkID:
                                  description: NetworkID is the ID of the ics network
                                    to which the device will be connected.
                                  type: string
                                networkName:
                                  description: NetworkName is the name of the ics
                                    network to which the device will be connected.
                                  type: string
                                networkType:
                                  description: NetworkType the type of the ics network
                                    to which the device will be connected.
                                  type: string
                                routes:
                                  description: Routes is a list of optional, static
                                    routes applied to the device.
                                  items:
                                    description: NetworkRouteSpec defines a static
                                      network route.
                                    properties:
                                      metric:
                                        description: Metric is the weight/priority
                                          of the route.
                                        format: int32
                                        type: integer
                                      to:
                                        description: To is an IPv4 or IPv6 address.
                                        type: string
                                      via:
                                        description: Via is an IPv4 or IPv6 address.
                                        type: string
                                    required:
                                    - metric
                                    - to
                                    - via
                                    type: object
                                  type: array
                                searchDomains:
                                  description: SearchDomains is a list of search domains
                                    used when resolving IP addresses with DNS.
                                  items:
                                    type: string
                                  type: array
                                switchType:
                                  description: SwitchType the type of the ics switch
                                    network to which the device will be connected.
                                  type: string
                              required:
                              - networkID
                              - networkName
                              - switchType
                              type: object
                            type: array
                          preferredAPIServerCidr:
                            description: PreferredAPIServeCIDR is the preferred CIDR
                              for the Kubernetes API server endpoint on this machine
                            type: string
                          routes:
                            description: Routes is a list of optional, static routes
                              applied to the virtual machine.
                            items:
                              description: NetworkRouteSpec defines a static network
                                route.
                              properties:
                                metric:
                                  description: Metric is the weight/priority of the
                                    route.
                                  format: int32
                                  type: integer
                                to:
                                  description: To is an IPv4 or IPv6 address.
                                  type: string
                                via:
                                  description: Via is an IPv4 or IPv6 address.
                                  type: string
                              required:
                              - metric
                              - to
                              - via
                              type: object
                            type: array
                        required:
                        - devices
                        type: object
                      numCPUs:
                        description: NumCPUs is the number of virtual processors in
                          a virtual machine. Defaults to the eponymous property value
                          in the template from which the virtual machine is cloned.
                        format: int32
                        type: integer
                      numCoresPerSocket:
                        description: NumCPUs is the number of cores among which to
                          distribute CPUs in this virtual machine. Defaults to the
                          eponymous property value in the template from which the
                          virtual machine is cloned.
                        format: int32
                        type: integer
                      providerID:
                        description: ProviderID is the virtual machine's BIOS UUID
                          formated as ics://12345678-1234-1234-1234-123456789abc
                        type: string
                      snapshot:
                        description: Snapshot is the name of the snapshot from which
                          to create a linked clone. This field is ignored if LinkedClone
                          is not enabled. Defaults to the source's current snapshot.
                        type: string
                      template:
                        description: Template is the name or inventory path of the
                          template used to clone the virtual machine.
                        type: string
                      user:
                        description: SSHUser specifies the name of a user that is
                          granted remote access to the deployed VM.
                        properties:
                          authorizedKey:
                            description: AuthorizedKey is one SSH keys that grant
                              remote access.
                            type: string
                          authorizedType:
                            description: AuthorizedType is the authorized type that
                              grant remote access.
                            type: string
                          name:
                            description: Name is the name of the vm system user.
                            type: string
                        required:
                        - authorizedKey
                        - authorizedType
                        - name
                        type: object
                    required:
                    - network
                    - template
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ICSMachineTemplate is the Schema for the icsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSMachineTemplateSpec defines the desired state of ICSMachineTemplate
            properties:
              template:
                description: ICSMachineTemplateResource describes the data needed
                  to create a ICSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      cloneMode:
                        description: CloneMode specifies the type of clone operation.
                          The LinkedClone mode is only support for templates that
                          have at least one snapshot. If the template has no snapshots,
                          then CloneMode defaults to FullClone. When LinkedClone mode
                          is enabled the DiskGiB field is ignored as it is not possible
                          to expand disks of linked clones. Defaults to LinkedClone,
                          but fails gracefully to FullClone if the source of the clone
                          operation has no snapshots.
                        type: string
                      cloudName:
                        description: Server is the IP address or FQDN of the ics server
                          on which the virtual machine is created/located.
                        type: string
                      cluster:
                        description: Cluster is the name or inventory path of the
                          cluster in which the virtual machine is created/located.
                        type: string
                      datastore:
                        description: Datastore is the name or inventory path of the
                          datastore in which the virtual machine is created/located.
                        type: string
                      disks:
                        description: Disks is the vm disks configuration for this
                          machine's VM.
                        items:
                          properties:
                            busModel:
                              description: 'BusModel default value: VIRTIO'
                              type: string
                            diskSize:
                              description: DiskSize is the size of a virtual machine's
                                disk, in GiB. Defaults to the eponymous property value
                                in the template from which the virtual machine is
                                cloned.
                              format: int32
                              type: integer
                            volumeFormat:
                              description: Default RAW, RAW\QCOW2
                              type: string
                            volumePolicy:
                              description: Default THIN, THIN\THICK
                              type: string
                          type: object
                        type: array
                      identityRef:
                        description: IdentityRef is a reference to either a Secret
                          that contains the identity to use when reconciling the cluster.
                        properties:
                          identityKey:
                            type: string
                          kind:
                            description: Kind of the identity. Can either be Secret
                            enum:
                            - Secret
                            type: string
                          name:
                            description: Name of the identity.
                            minLength: 1
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      memoryMiB:
                        description: MemoryMiB is the size of a virtual machine's
                          memory, in MiB. Defaults to the eponymous property value
                          in the template from which the virtual machine is cloned.
                        format: int64
                        type: integer
                      network:
                        description: Network is the network configuration for this
                          machine's VM.
                        properties:
                          devices:
                            description: Devices is the list of network devices used
                              by the virtual machine. Make sure at least one network
                              matches the ClusterSpec.CloudProviderConfiguration.Network.Name
                            items:
                              description: NetworkDeviceSpec defines the network configuration
                                for a virtual machine's network device.
                              properties:
                                deviceID:
                                  description: DeviceID may be used to explicitly
                                    assign a name to the network device as it exists
                                    in the guest operating system.
                                  type: string
                                deviceName:
                                  description: DeviceName may be used to explicitly
                                    assign a name to the network device as it exists
                                    in the guest operating system.
                                  type: string
                                dhcp4:
                                  description: DHCP4 is a flag that indicates whether
                                    or not to use DHCP for IPv4 on this device. If
                                    true then IPAddrs should not contain any IPv4
                                    addresses.
                                  type: boolean
                                dhcp6:
                                  description: DHCP6 is a flag that indicates whether
                                    or not to use DHCP for IPv6 on this device. If
                                    true then IPAddrs should not contain any IPv6
                                    addresses.
                                  type: boolean
                                gateway4:
                                  description: Gateway4 is the IPv4 gateway used by
                                    this device. Required when DHCP4 is false.
                                  type: string
                                gateway6:
                                  description: Gateway4 is the IPv4 gateway used by
                                    this device. Required when DHCP6 is false.
                                  type: string
                                ipAddrs:
                                  description: IPAddrs is a list of one or more IPv4
                                    and/or IPv6 addresses to assign to this device.
                                    Required when DHCP4 and DHCP6 are both false.
                                  items:
                                    type: string
                                  type: array
                                macAddr:
                                  description: MACAddr is the MAC address used by
                                    this device. It is generally a good idea to omit
                                    this field and allow a MAC address to be generated.
                                    Please note that this value must use the OUI to
                                    work with the in-tree ics cloud provider.
                                  type: string
                                mtu:
                                  description: MTU is the device’s Maximum Transmission
                                    Unit size in bytes.
                                  format: int64
                                  type: integer
                                nameservers:
                                  description: Nameservers is a list of IPv4 and/or
                                    IPv6 addresses used as DNS nameservers. Please
                                    note that Linux allows only three nameservers
                                    (https://linux.die.net/man/5/resolv.conf).
                                  items:
                                    type: string
                                  type: array
                                netMask:
                                  description: NetMask the network device network.
                                  type: string
                                networkID:
                                  description: NetworkID is the ID of the ics network
                                    to which the device will be connected.
                                  type: string
                                networkName:
                                  description: NetworkName is the name of the ics
                                    network to which the device will be connected.
                                  type: string
                                networkType:
                                  description: NetworkType the type of the ics network
                                    to which the device will be connected.
                                  type: string
                                routes:
                                  description: Routes is a list of optional, static
                                    routes applied to the device.
                                  items:
                                    description: NetworkRouteSpec defines a static
                                      network route.
                                    properties:
                                      metric:
                                        description: Metric is the weight/priority
                                          of the route.
                                        format: int32
                                        type: integer
                                      to:
                                        description: To is an IPv4 or IPv6 address.
                                        type: string
                                      via:
                                        description: Via is an IPv4 or IPv6 address.
                                        type: string
                                    required:
                                    - metric
                                    - to
                                    - via
                                    type: object
                                  type: array
                                searchDomains:
                                  description: SearchDomains is a list of search domains
                                    used when resolving IP addresses with DNS.
                                  items:
                                    type: string
                                  type: array
                                switchType:
                                  description: SwitchType the type of the ics switch
                                    network to which the device will be connected.
                                  type: string
                              required:
                              - networkID
                              - networkName
                              - switchType
                              type: object
                            type: array
                          preferredAPIServerCidr:
                            description: PreferredAPIServeCIDR is the preferred CIDR
                              for the Kubernetes API server endpoint on this machine
                            type: string
                          routes:
                            description: Routes is a list of optional, static routes
                              applied to the virtual machine.
                            items:
                              description: NetworkRouteSpec defines a static network
                                route.
                              properties:
                                metric:
                                  description: Metric is the weight/priority of the
                                    route.
                                  format: int32
                                  type: integer
                                to:
                                  description: To is an IPv4 or IPv6 address.
                                  type: string
                                via:
                                  description: Via is an IPv4 or IPv6 address.
                                  type: string
                              required:
                              - metric
                              - to
                              - via
                              type: object
                            type: array
                        required:
                        - devices
                        type: object
                      numCPUs:
                        description: NumCPUs is the number of virtual processors in
                          a virtual machine. Defaults to the eponymous property value
                          in the template from which the virtual machine is cloned.
                        format: int32
                        type: integer
                      numCoresPerSocket:
                        description: NumCPUs is the number of cores among which to
                          distribute CPUs in this virtual machine. Defaults to the
                          eponymous property value in the template from which the
                          virtual machine is cloned.
                        format: int32
                        type: integer
                      providerID:
                        description: ProviderID is the virtual machine's BIOS UUID
                          formated as ics://12345678-1234-1234-1234-123456789abc
                        type: string
                      snapshot:
                        description: Snapshot is the name of the snapshot from which
                          to create a linked clone. This field is ignored if LinkedClone
                          is not enabled. Defaults to the source's current snapshot.
                        type: string
                      template:
                        description: Template is the name or inventory path of the
                          template used to clone the virtual machine.
                        type: string
                      user:
                        description: SSHUser specifies the name of a user that is
                          granted remote access to the deployed VM.
                        properties:
                          authorizedKey:
                            description: AuthorizedKey is one SSH keys that grant
                              remote access.
                            type: string
                          authorizedType:
                            description: AuthorizedType is the authorized type that
                              grant remote access.
                            type: string
                          name:
                            description: Name is the name of the vm system user.
                            type: string
                        required:
                        - authorizedKey
                        - authorizedType
                        - name
                        type: object
                    required:
                    - network
                    - template
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    cluster.x-k8s.io/v1beta1: v1beta1
  name: icsvms.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capics-webhook-service
          namespace: capics-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ICSVM
    listKind: ICSVMList
    plural: icsvms
    singular: icsvm
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: ICSVM is the Schema for the icsvms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSVMSpec defines the desired state of ICSVM
            properties:
              UID:
                description: UID is the the VM's ID that is assigned at runtime after
                  the VM has been created. This field is required at runtime for other
                  controllers that read this CRD as unstructured data.
                type: string
              biosUUID:
                description: BiosUUID is the the VM's BIOS UUID that is assigned at
                  runtime after the VM has been created. This field is required at
                  runtime for other controllers that read this CRD as unstructured
                  data.
                type: string
              bootstrapRef:
                description: BootstrapRef is a reference to a bootstrap provider-specific
                  resource that holds configuration details. This field is optional
                  in case no bootstrap data is required to create a VM.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              cloneMode:
                description: CloneMode specifies the type of clone operation. The
                  LinkedClone mode is only support for templates that have at least
                  one snapshot. If the template has no snapshots, then CloneMode defaults
                  to FullClone. When LinkedClone mode is enabled the DiskGiB field
                  is ignored as it is not possible to expand disks of linked clones.
                  Defaults to LinkedClone, but fails gracefully to FullClone if the
                  source of the clone operation has no snapshots.
                type: string
              cloudName:
                description: Server is the IP address or FQDN of the ics server on
                  which the virtual machine is created/located.
                type: string
              cluster:
                description: Cluster is the name or inventory path of the cluster
                  in which the virtual machine is created/located.
                type: string
              datastore:
                description: Datastore is the name or inventory path of the datastore
                  in which the virtual machine is created/located.
                type: string
              disks:
                description: Disks is the vm disks configuration for this machine's
                  VM.
                items:
                  properties:
                    busModel:
                      description: 'BusModel default value: VIRTIO'
                      type: string
                    diskSize:
                      description: DiskSize is the size of a virtual machine's disk,
                        in GiB. Defaults to the eponymous property value in the template
                        from which the virtual machine is cloned.
                      format: int32
                      type: integer
                    volumeFormat:
                      description: Default RAW, RAW\QCOW2
                      type: string
                    volumePolicy:
                      description: Default THIN, THIN\THICK
                      type: string
                  type: object
                type: array
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              memoryMiB:
                description: MemoryMiB is the size of a virtual machine's memory,
                  in MiB. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int64
                type: integer
              network:
                description: Network is the network configuration for this machine's
                  VM.
                properties:
                  devices:
                    description: Devices is the list of network devices used by the
                      virtual machine. Make sure at least one network matches the
                      ClusterSpec.CloudProviderConfiguration.Network.Name
                    items:
                      description: NetworkDeviceSpec defines the network configuration
                        for a virtual machine's network device.
                      properties:
                        deviceID:
                          description: DeviceID may be used to explicitly assign a
                            name to the network device as it exists in the guest operating
                            system.
                          type: string
                        deviceName:
                          description: DeviceName may be used to explicitly assign
                            a name to the network device as it exists in the guest
                            operating system.
                          type: string
                        dhcp4:
                          description: DHCP4 is a flag that indicates whether or not
                            to use DHCP for IPv4 on this device. If true then IPAddrs
                            should not contain any IPv4 addresses.
                          type: boolean
                        dhcp6:
                          description: DHCP6 is a flag that indicates whether or not
                            to use DHCP for IPv6 on this device. If true then IPAddrs
                            should not contain any IPv6 addresses.
                          type: boolean
                        gateway4:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP4 is false.
                          type: string
                        gateway6:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP6 is false.
                          type: string
                        ipAddrs:
                          description: IPAddrs is a list of one or more IPv4 and/or
                            IPv6 addresses to assign to this device. Required when
                            DHCP4 and DHCP6 are both false.
                          items:
                            type: string
                          type: array
                        macAddr:
                          description: MACAddr is the MAC address used by this device.
                            It is generally a good idea to omit this field and allow
                            a MAC address to be generated. Please note that this value
                            must use the OUI to work with the in-tree ics cloud provider.
                          type: string
                        mtu:
                          description: MTU is the device’s Maximum Transmission Unit
                            size in bytes.
                          format: int64
                          type: integer
                        nameservers:
                          description: Nameservers is a list of IPv4 and/or IPv6 addresses
                            used as DNS nameservers. Please note that Linux allows
                            only three nameservers (https://linux.die.net/man/5/resolv.conf).
                          items:
                            type: string
                          type: array
                        netMask:
                          description: NetMask the network device network.
                          type: string
                        networkID:
                          description: NetworkID is the ID of the ics network to which
                            the device will be connected.
                          type: string
                        networkName:
                          description: NetworkName is the name of the ics network
                            to which the device will be connected.
                          type: string
                        networkType:
                          description: NetworkType the type of the ics network to
                            which the device will be connected.
                          type: string
                        routes:
                          description: Routes is a list of optional, static routes
                            applied to the device.
                          items:
                            description: NetworkRouteSpec defines a static network
                              route.
                            properties:
                              metric:
                                description: Metric is the weight/priority of the
                                  route.
                                format: int32
                                type: integer
                              to:
                                description: To is an IPv4 or IPv6 address.
                                type: string
                              via:
                                description: Via is an IPv4 or IPv6 address.
                                type: string
                            required:
                            - metric
                            - to
                            - via
                            type: object
                          type: array
                        searchDomains:
                          description: SearchDomains is a list of search domains used
                            when resolving IP addresses with DNS.
                          items:
                            type: string
                          type: array
                        switchType:
                          description: SwitchType the type of the ics switch network
                            to which the device will be connected.
                          type: string
                      required:
                      - networkID
                      - networkName
                      - switchType
                      type: object
                    type: array
                  preferredAPIServerCidr:
                    description: PreferredAPIServeCIDR is the preferred CIDR for the
                      Kubernetes API server endpoint on this machine
                    type: string
                  routes:
                    description: Routes is a list of optional, static routes applied
                      to the virtual machine.
                    items:
                      description: NetworkRouteSpec defines a static network route.
                      properties:
                        metric:
                          description: Metric is the weight/priority of the route.
                          format: int32
                          type: integer
                        to:
                          description: To is an IPv4 or IPv6 address.
                          type: string
                        via:
                          description: Via is an IPv4 or IPv6 address.
                          type: string
                      required:
                      - metric
                      - to
                      - via
                      type: object
                    type: array
                required:
                - devices
                type: object
              numCPUs:
                description: NumCPUs is the number of virtual processors in a virtual
                  machine. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int32
                type: integer
              numCoresPerSocket:
                description: NumCPUs is the number of cores among which to distribute
                  CPUs in this virtual machine. Defaults to the eponymous property
                  value in the template from which the virtual machine is cloned.
                format: int32
                type: integer
              snapshot:
                description: Snapshot is the name of the snapshot from which to create
                  a linked clone. This field is ignored if LinkedClone is not enabled.
                  Defaults to the source's current snapshot.
                type: string
              template:
                description: Template is the name or inventory path of the template
                  used to clone the virtual machine.
                type: string
              user:
                description: SSHUser specifies the name of a user that is granted
                  remote access to the deployed VM.
                properties:
                  authorizedKey:
                    description: AuthorizedKey is one SSH keys that grant remote access.
                    type: string
                  authorizedType:
                    description: AuthorizedType is the authorized type that grant
                      remote access.
                    type: string
                  name:
                    description: Name is the name of the vm system user.
                    type: string
                required:
                - authorizedKey
                - authorizedType
                - name
                type: object
            required:
            - network
            - template
            type: object
          status:
            description: ICSVMStatus defines the observed state of ICSVM
            properties:
              addresses:
                description: Addresses is a list of the VM's IP addresses. This field
                  is required at runtime for other controllers that read this CRD
                  as unstructured data.
                items:
                  type: string
                type: array
              cloneMode:
                description: CloneMode is the type of clone operation used to clone
                  this VM. Since LinkedMode is the default but fails gracefully if
                  the source of the clone has no snapshots, this field may be used
                  to determine the actual type of clone operation used to create this
                  VM.
                type: string
              conditions:
                description: Conditions defines current service state of the ICSVM.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the icsvm and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the vm. \n Any transient errors that occur during the
                  reconciliation of icsvms can be added as events to the icsvm object
                  and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the icsvm and will contain a succinct
                  value suitable for vm interpretation. \n This field should not be
                  set for transitive errors that a controller faces that are expected
                  to be fixed automatically over time (like service outages), but
                  instead indicate that something is fundamentally wrong with the
                  vm. \n Any transient errors that occur during the reconciliation
                  of icsvms can be added as events to the icsvm object and/or logged
                  in the controller's output."
                type: string
              host:
                description: Host describes the hostname or IP address of the infrastructure
                  host that the ICSVM is residing on.
                type: string
              moduleUUID:
                description: ModuleUUID is the unique identifier for the iCenter cluster
                  module construct which is used to configure anti-affinity. Objects
                  with the same ModuleUUID will be anti-affined, meaning that the
                  iCenter DRS will best effort schedule the VMs on separate hosts.
                type: string
              network:
                description: Network returns the network status for each of the machine's
                  configured network interfaces.
                items:
                  description: NetworkStatus provides information about one of a VM's
                    networks.
                  properties:
                    connected:
                      description: Connected is a flag that indicates whether this
                        network is currently connected to the VM.
                      type: boolean
                    ipAddrs:
                      description: IPAddrs is one or more IP addresses reported by
                        vm-tools.
                      items:
                        type: string
                      type: array
                    macAddr:
                      description: MACAddr is the MAC address of the network device.
                      type: string
                    networkName:
                      description: NetworkName is the name of the network.
                      type: string
                  required:
                  - macAddr
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready. This
                  field is required at runtime for other controllers that read this
                  CRD as unstructured data.
                type: boolean
              snapshot:
                description: Snapshot is the name of the snapshot from which the VM
                  was cloned if LinkedMode is enabled.
                type: string
              taskRef:
                description: TaskRef is a managed object reference to a Task related
                  to the machine. This value is set automatically at runtime and should
                  not be set or modified by users.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ICSVM is the Schema for the icsvms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ICSVMSpec defines the desired state of ICSVM
            properties:
              UID:
                description: UID is the the VM's ID that is assigned at runtime after
                  the VM has been created. This field is required at runtime for other
                  controllers that read this CRD as unstructured data.
                type: string
              biosUUID:
                description: BiosUUID is the the VM's BIOS UUID that is assigned at
                  runtime after the VM has been created. This field is required at
                  runtime for other controllers that read this CRD as unstructured
                  data.
                type: string
              bootstrapRef:
                description: BootstrapRef is a reference to a bootstrap provider-specific
                  resource that holds configuration details. This field is optional
                  in case no bootstrap data is required to create a VM.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              cloneMode:
                description: CloneMode specifies the type of clone operation. The
                  LinkedClone mode is only support for templates that have at least
                  one snapshot. If the template has no snapshots, then CloneMode defaults
                  to FullClone. When LinkedClone mode is enabled the DiskGiB field
                  is ignored as it is not possible to expand disks of linked clones.
                  Defaults to LinkedClone, but fails gracefully to FullClone if the
                  source of the clone operation has no snapshots.
                type: string
              cloudName:
                description: Server is the IP address or FQDN of the ics server on
                  which the virtual machine is created/located.
                type: string
              cluster:
                description: Cluster is the name or inventory path of the cluster
                  in which the virtual machine is created/located.
                type: string
              datastore:
                description: Datastore is the name or inventory path of the datastore
                  in which the virtual machine is created/located.
                type: string
              disks:
                description: Disks is the vm disks configuration for this machine's
                  VM.
                items:
                  properties:
                    busModel:
                      description: 'BusModel default value: VIRTIO'
                      type: string
                    diskSize:
                      description: DiskSize is the size of a virtual machine's disk,
                        in GiB. Defaults to the eponymous property value in the template
                        from which the virtual machine is cloned.
                      format: int32
                      type: integer
                    volumeFormat:
                      description: Default RAW, RAW\QCOW2
                      type: string
                    volumePolicy:
                      description: Default THIN, THIN\THICK
                      type: string
                  type: object
                type: array
              identityRef:
                description: IdentityRef is a reference to either a Secret that contains
                  the identity to use when reconciling the cluster.
                properties:
                  identityKey:
                    type: string
                  kind:
                    description: Kind of the identity. Can either be Secret
                    enum:
                    - Secret
                    type: string
                  name:
                    description: Name of the identity.
                    minLength: 1
                    type: string
                required:
                - kind
                - name
                type: object
              memoryMiB:
                description: MemoryMiB is the size of a virtual machine's memory,
                  in MiB. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int64
                type: integer
              network:
                description: Network is the network configuration for this machine's
                  VM.
                properties:
                  devices:
                    description: Devices is the list of network devices used by the
                      virtual machine. Make sure at least one network matches the
                      ClusterSpec.CloudProviderConfiguration.Network.Name
                    items:
                      description: NetworkDeviceSpec defines the network configuration
                        for a virtual machine's network device.
                      properties:
                        deviceID:
                          description: DeviceID may be used to explicitly assign a
                            name to the network device as it exists in the guest operating
                            system.
                          type: string
                        deviceName:
                          description: DeviceName may be used to explicitly assign
                            a name to the network device as it exists in the guest
                            operating system.
                          type: string
                        dhcp4:
                          description: DHCP4 is a flag that indicates whether or not
                            to use DHCP for IPv4 on this device. If true then IPAddrs
                            should not contain any IPv4 addresses.
                          type: boolean
                        dhcp6:
                          description: DHCP6 is a flag that indicates whether or not
                            to use DHCP for IPv6 on this device. If true then IPAddrs
                            should not contain any IPv6 addresses.
                          type: boolean
                        gateway4:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP4 is false.
                          type: string
                        gateway6:
                          description: Gateway4 is the IPv4 gateway used by this device.
                            Required when DHCP6 is false.
                          type: string
                        ipAddrs:
                          description: IPAddrs is a list of one or more IPv4 and/or
                            IPv6 addresses to assign to this device. Required when
                            DHCP4 and DHCP6 are both false.
                          items:
                            type: string
                          type: array
                        macAddr:
                          description: MACAddr is the MAC address used by this device.
                            It is generally a good idea to omit this field and allow
                            a MAC address to be generated. Please note that this value
                            must use the OUI to work with the in-tree ics cloud provider.
                          type: string
                        mtu:
                          description: MTU is the device’s Maximum Transmission Unit
                            size in bytes.
                          format: int64
                          type: integer
                        nameservers:
                          description: Nameservers is a list of IPv4 and/or IPv6 addresses
                            used as DNS nameservers. Please note that Linux allows
                            only three nameservers (https://linux.die.net/man/5/resolv.conf).
                          items:
                            type: string
                          type: array
                        netMask:
                          description: NetMask the network device network.
                          type: string
                        networkID:
                          description: NetworkID is the ID of the ics network to which
                            the device will be connected.
                          type: string
                        networkName:
                          description: NetworkName is the name of the ics network
                            to which the device will be connected.
                          type: string
                        networkType:
                          description: NetworkType the type of the ics network to
                            which the device will be connected.
                          type: string
                        routes:
                          description: Routes is a list of optional, static routes
                            applied to the device.
                          items:
                            description: NetworkRouteSpec defines a static network
                              route.
                            properties:
                              metric:
                                description: Metric is the weight/priority of the
                                  route.
                                format: int32
                                type: integer
                              to:
                                description: To is an IPv4 or IPv6 address.
                                type: string
                              via:
                                description: Via is an IPv4 or IPv6 address.
                                type: string
                            required:
                            - metric
                            - to
                            - via
                            type: object
                          type: array
                        searchDomains:
                          description: SearchDomains is a list of search domains used
                            when resolving IP addresses with DNS.
                          items:
                            type: string
                          type: array
                        switchType:
                          description: SwitchType the type of the ics switch network
                            to which the device will be connected.
                          type: string
                      required:
                      - networkID
                      - networkName
                      - switchType
                      type: object
                    type: array
                  preferredAPIServerCidr:
                    description: PreferredAPIServeCIDR is the preferred CIDR for the
                      Kubernetes API server endpoint on this machine
                    type: string
                  routes:
                    description: Routes is a list of optional, static routes applied
                      to the virtual machine.
                    items:
                      description: NetworkRouteSpec defines a static network route.
                      properties:
                        metric:
                          description: Metric is the weight/priority of the route.
                          format: int32
                          type: integer
                        to:
                          description: To is an IPv4 or IPv6 address.
                          type: string
                        via:
                          description: Via is an IPv4 or IPv6 address.
                          type: string
                      required:
                      - metric
                      - to
                      - via
                      type: object
                    type: array
                required:
                - devices
                type: object
              numCPUs:
                description: NumCPUs is the number of virtual processors in a virtual
                  machine. Defaults to the eponymous property value in the template
                  from which the virtual machine is cloned.
                format: int32
                type: integer
              numCoresPerSocket:
                description: NumCPUs is the number of cores among which to distribute
                  CPUs in this virtual machine. Defaults to the eponymous property
                  value in the template from which the virtual machine is cloned.
                format: int32
                type: integer
              snapshot:
                description: Snapshot is the name of the snapshot from which to create
                  a linked clone. This field is ignored if LinkedClone is not enabled.
                  Defaults to the source's current snapshot.
                type: string
              template:
                description: Template is the name or inventory path of the template
                  used to clone the virtual machine.
                type: string
              user:
                description: SSHUser specifies the name of a user that is granted
                  remote access to the deployed VM.
                properties:
                  authorizedKey:
                    description: AuthorizedKey is one SSH keys that grant remote access.
                    type: string
                  authorizedType:
                    description: AuthorizedType is the authorized type that grant
                      remote access.
                    type: string
                  name:
                    description: Name is the name of the vm system user.
                    type: string
                required:
                - authorizedKey
                - authorizedType
                - name
                type: object
            required:
            - network
            - template
            type: object
          status:
            description: ICSVMStatus defines the observed state of ICSVM
            properties:
              addresses:
                description: Addresses is a list of the VM's IP addresses. This field
                  is required at runtime for other controllers that read this CRD
                  as unstructured data.
                items:
                  type: string
                type: array
              cloneMode:
                description: CloneMode is the type of clone operation used to clone
                  this VM. Since LinkedMode is the default but fails gracefully if
                  the source of the clone has no snapshots, this field may be used
                  to determine the actual type of clone operation used to create this
                  VM.
                type: string
              conditions:
                description: Conditions defines current service state of the ICSVM.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the icsvm and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the vm. \n Any transient errors that occur during the
                  reconciliation of icsvms can be added as events to the icsvm object
                  and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the icsvm and will contain a succinct
                  value suitable for vm interpretation. \n This field should not be
                  set for transitive errors that a controller faces that are expected
                  to be fixed automatically over time (like service outages), but
                  instead indicate that something is fundamentally wrong with the
                  vm. \n Any transient errors that occur during the reconciliation
                  of icsvms can be added as events to the icsvm object and/or logged
                  in the controller's output."
                type: string
              host:
                description: Host describes the hostname or IP address of the infrastructure
                  host that the ICSVM is residing on.
                type: string
              moduleUUID:
                description: ModuleUUID is the unique identifier for the iCenter cluster
                  module construct which is used to configure anti-affinity. Objects
                  with the same ModuleUUID will be anti-affined, meaning that the
                  iCenter DRS will best effort schedule the VMs on separate hosts.
                type: string
              network:
                description: Network returns the network status for each of the machine's
                  configured network interfaces.
                items:
                  description: NetworkStatus provides information about one of a VM's
                    networks.
                  properties:
                    connected:
                      description: Connected is a flag that indicates whether this
                        network is currently connected to the VM.
                      type: boolean
                    ipAddrs:
                      description: IPAddrs is one or more IP addresses reported by
                        vm-tools.
                      items:
                        type: string
                      type: array
                    macAddr:
                      description: MACAddr is the MAC address of the network device.
                      type: string
                    networkName:
                      description: NetworkName is the name of the network.
                      type: string
                  required:
                  - macAddr
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready. This
                  field is required at runtime for other controllers that read this
                  CRD as unstructured data.
                type: boolean
              snapshot:
                description: Snapshot is the name of the snapshot from which the VM
                  was cloned if LinkedMode is enabled.
                type: string
              taskRef:
                description: TaskRef is a managed object reference to a Task related
                  to the machine. This value is set automatically at runtime and should
                  not be set or modified by users.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ipaddresses.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capics-webhook-service
          namespace: capics-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IPAddress
    listKind: IPAddressList
    plural: ipaddresses
    singular: ipaddress
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: IPAddress is the Schema for the ipaddresses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAddressSpec defines the desired state of IPAddress.
            properties:
              address:
                description: Address contains the IP address
                type: string
              dnsServers:
                description: DNSServers is the list of dns servers
                items:
                  type: string
                type: array
              gateway:
                description: Gateway is the gateway ip address
                type: string
              macAddr:
                description: MACAddr is the MAC address used by this device. It is
                  generally a good idea to omit this field and allow a MAC address
                  to be generated. Please note that this value must use the OUI to
                  work with the in-tree ics cloud provider.
                type: string
              prefix:
                description: Prefix is the mask of the network as integer (max 128)
                maximum: 128
                type: integer
              templateRef:
                description: Template is the ICSMachineTemplate this was generated
                  from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              vmRef:
                description: VM points to the object the ICSVM was created for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - address
            - templateRef
            - vmRef
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: IPAddress is the Schema for the ipaddresses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAddressSpec defines the desired state of IPAddress.
            properties:
              address:
                description: Address contains the IP address
                type: string
              dnsServers:
                description: DNSServers is the list of dns servers
                items:
                  type: string
                type: array
              gateway:
                description: Gateway is the gateway ip address
                type: string
              macAddr:
                description: MACAddr is the MAC address used by this device. It is
                  generally a good idea to omit this field and allow a MAC address
                  to be generated. Please note that this value must use the OUI to
                  work with the in-tree ics cloud provider.
                type: string
              prefix:
                description: Prefix is the mask of the network as integer (max 128)
                maximum: 128
                type: integer
              templateRef:
                description: Template is the ICSMachineTemplate this was generated
                  from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              vmRef:
                description: VM points to the object the ICSVM was created for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - address
            - vmRef
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-controller-manager
  namespace: capics-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-leader-election-role
  namespace: capics-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - icsvms
  - icsvms/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  - machinesets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsmachinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsmachinetemplates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsvms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - icsvms/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ipaddresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-leader-election-rolebinding
  namespace: capics-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capics-leader-election-role
subjects:
- kind: ServiceAccount
  name: capics-controller-manager
  namespace: capics-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capics-manager-role
subjects:
- kind: ServiceAccount
  name: capics-controller-manager
  namespace: capics-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-webhook-service
  namespace: capics-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    cluster.x-k8s.io/provider: infrastructure-ics
    control-plane: capics-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
    control-plane: capics-controller-manager
  name: capics-controller-manager
  namespace: capics-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-ics
      control-plane: capics-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: infrastructure-ics
        control-plane: capics-controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        - --logtostderr
        - --v=6
        command:
        - /manager
        image: gcr.io/cluster-api-provider-ics/release/manager:v1.1.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capics-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capics-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-serving-cert
  namespace: capics-system
spec:
  dnsNames:
  - capics-webhook-service.capics-system.svc
  - capics-webhook-service.capics-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capics-selfsigned-issuer
  secretName: capics-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-selfsigned-issuer
  namespace: capics-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capics-system/capics-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-ics
  name: capics-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capics-webhook-service
      namespace: capics-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-icscluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.icscluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - icsclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capics-webhook-service
      namespace: capics-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-icsmachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.icsmachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - icsmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capics-webhook-service
      namespace: capics-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-icsmachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.icsmachinetemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - icsmachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capics-webhook-service
      namespace: capics-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-icsvm
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.icsvm.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - icsvms
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capics-webhook-service
      namespace: capics-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-ipaddress
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ipaddress.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipaddresses
  sideEffects: None
